# 前端页面 Nginx 配置

# HTTP 服务器
server {
    listen 80;
    server_name www.example.com;
    
    # 重定向到 HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    server_name www.example.com;
    
    # SSL 配置
    ssl_certificate /etc/nginx/ssl/www.example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/www.example.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # 现代 SSL 配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS 配置
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # 安全相关头部
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # 访问日志
    access_log /var/log/nginx/web.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/web.error.log warn;
    
    # 根目录
    root /var/www/web;
    index index.html;
    
    # 客户端配置
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 健康检查接口
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"UP"}';
    }
    
    # 静态文件
    location / {
        try_files $uri $uri/ /index.html;
        
        # 缓存控制
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # 启用 gzip
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1000;
        gzip_comp_level 6;
        gzip_vary on;
        gzip_proxied any;
        
        # 安全头部
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }
    
    # 静态资源
    location /static/ {
        alias /var/www/web/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # 启用 gzip
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1000;
        gzip_comp_level 6;
        gzip_vary on;
        gzip_proxied any;
    }
    
    # 媒体文件
    location /media/ {
        alias /var/www/web/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # 启用 gzip
        gzip on;
        gzip_types image/svg+xml;
        gzip_min_length 1000;
    }
    
    # API 代理
    location /api/ {
        proxy_pass http://admin_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 限流配置
        limit_req zone=web_limit burst=20 nodelay;
        limit_req_status 429;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
    
    # DSP API 代理
    location /dsp/ {
        proxy_pass http://dsp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 限流配置
        limit_req zone=web_limit burst=20 nodelay;
        limit_req_status 429;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
    
    # 错误页面
    location = /404.html {
        internal;
        root /var/www/web/error/;
    }
    
    location = /50x.html {
        internal;
        root /var/www/web/error/;
    }
    
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 限流配置
limit_req_zone $binary_remote_addr zone=web_limit:10m rate=10r/s; 